
知识回顾:
	面向对象:python 一切皆对象		
	优点：
		1.增强代码复用，减少重复	
		2.便于重构，增加/减少功能
		3.三大特性：封装性，继承性，多态性
	缺点:
		1.结果不可预测

	准备工作:
		step1:
			抽象类与类关系	
		step2:
			定义类(属性，行为(方法))
			class 类名(基类):
				类属性
				# __init__构造方法：自动调用方法
				def __init__(self): 
					实例属性(私有(只能在类内部使用)，共有)
				#方法---->描述对象行为
		step3:
			创建对象	
			对象名 = 类名()
			# 对象方法的调用
			对象名.方法名()
				
	注意知识点:
		1.类名首字母大写		
		2.属性：类属性访问 类名.属性名
				实例属性   对象.属性名 self本类对象
					私有属性 __属性名 (访问_类名+属性名)
				types模块  实现将函数与对象的方法绑定
				对象.新方法=types.MethodType(方法，对象)
				在类外可以为类，对象添加新的属性和方法

				hasattr() 
				setattr()
				getattr()
			
				type()
				isinstance(对象， 类) # 推荐

				issubclass()

		3.继承
			避免使用多继承	
			
			<1>继承的派生类中不会自动调用其基类的构造方法，需
			子类中主动调用，基类类名.__init__(self) / super(派生类, self).__init() / super().__init__()
			
			<2>如果派生类中的方法与基类方法同名，派生类对象调用此方法的时候，使用的是派生类定义个方法



